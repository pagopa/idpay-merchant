microservice-chart:
  namespace: "idpay"
  nameOverride: ""
  fullnameOverride: ""

  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 120
    failureThreshold: 15
    periodSeconds: 10

  readinessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 120
    failureThreshold: 15
    periodSeconds: 10

  deployment:
    create: true

  service:
    create: true
    type: ClusterIP
    port: 8080

  ingress:
    create: true
    path: /idpaymerchant/(.*)
    annotations: {
      nginx.ingress.kubernetes.io/proxy-body-size=2m
    }

  serviceAccount:
    create: false
    annotations: {}
    name: ""

  podAnnotations: {}

  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault

  securityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 10000
    runAsGroup: 10000

  envConfig:
    MONGODB_DBNAME: idpay
    APPLICATIONINSIGHTS_ROLE_NAME: "idpaymerchant"
    APPLICATIONINSIGHTS_INSTRUMENTATION_LOGGING_LEVEL: "OFF"
    APPLICATIONINSIGHTS_INSTRUMENTATION_MICROMETER_ENABLED: "false"
    APPLICATIONINSIGHTS_PREVIEW_PROFILER_ENABLED: "false"
    ENABLE_AUDIT_APPENDER: "TRUE"
    BLOB_STORAGE_CONTAINER_REFERENCE: merchant

  envConfigMapExternals:
    idpay-common:
      TZ: TZ
    rest-client:
      IDPAY_INITIATIVE_BASE_URL: initiative_ms_base_url

    idpay-eventhub-01:
      KAFKA_BROKER: kafka_broker
      KAFKA_ERRORS_BROKER: kafka_broker
      KAFKA_ERRORS_TOPIC: idpay_error_topic
      KAFKA_BINDER_BROKER_ENDPOINT_LIST: kafka_broker
      KAFKA_REWARD_NOTIFICATION_UPLOAD_BROKER: kafka_broker
      KAFKA_REWARD_NOTIFICATION_UPLOAD_TOPIC: idpay_reward_notification_storage_events_topic
      KAFKA_INITIATIVE_BROKER: kafka_broker
      KAFKA_INITIATIVE_TOPIC: idpay_rule_update_topic
      #KAFKA_TOPIC_COMMANDS: idpay-commands

  envSecret:
    MONGODB_URI: mongodb-connection-string
    KAFKA_ERRORS_SASL_JAAS_CONFIG: evh-idpay-errors-idpay-errors-producer-jaas-config-idpay-01
    BLOB_STORAGE_CONNECTION_STRING: refund-storage-connection-string
    KAFKA_REWARD_NOTIFICATION_UPLOAD_SASL_JAAS_CONFIG: evh-idpay-reward-notification-storage-events-idpay-reward-notification-storage-consumer-jaas-config-idpay-01
    KAFKA_COMMANDS_IN_SASL_JAAS_CONFIG: evh-idpay-commands-idpay-commands-consumer-jaas-config-idpay-01
    KAFKA_COMMANDS_OUT_SASL_JAAS_CONFIG: evh-idpay-commands-idpay-commands-producer-jaas-config-idpay-01
    KAFKA_INITIATIVE_SASL_JAAS_CONFIG: evh-idpay-rule-update-idpay-rule-update-consumer-jaas-config-idpay-01

  # nodeSelector: {}

  # tolerations: []

  # affinity: {}
